name: 'GitHub Action Submodule Updates'
description: 'Update submodules and creates new pull request against parent repository'
author: 'releasehub'

branding:
  icon: 'git-pull-request'
  color: 'yellow'

inputs:
  github_token:
    description: 'Github Token'
    required: true
  checkout_branch:
    description: 'Branch to checkout'
    required: false
    default: 'main'
  pr_against_branch:
    description: 'Parent branch'
    required: true
  parent_repository:
    description: 'Parent Repository'
    required: true
  submodule_path:
    description: 'Location of submodule in parent repo relative to root'
    required: true
  owner:
    description: 'Owner'
    required: true
  label:
    description: 'Create Release Environment label'
    required: false
    default: 'Create Release Environment'
  pr_title:
    description: 'Title of pull request'
    required: false
    default: '${{ github.repository }} update from merging: ${{ fromJson(steps.get_pr_data.outputs.result).title }}'
  pr_description:
    description: 'Description of pull request'
    required: false
    default: 'PR triggered by update to develop branch on ${{ github.repository }}. Commit hash: `${{ github.sha }}`. PR link: [#${{ fromJson(steps.get_pr_data.outputs.result).number }}](https://github.com/${{ github.repository }}/pull/${{ fromJson(steps.get_pr_data.outputs.result).number }})'
  
runs:
  using: 'composite'
  steps:
  - name: Checkout parent repository and branch
    uses: actions/checkout@v4
    with:
      token: ${{ inputs.github_token }}
      repository: ${{ inputs.parent_repository }}
      ref: ${{ inputs.checkout_branch }}
      submodules: true
      fetch-depth: 0

  - name: Create new branch and push changes
    shell: bash
    run: |
      git config user.name github-actions
      git config user.email github-actions@github.com
      git submodule update --remote "${{ inputs.submodule_path }}"
      git add "${{ inputs.submodule_path }}"
      git checkout -b "${{ github.repository }}-$GITHUB_RUN_ID"
      git commit -m "updating submodules"
      git push --set-upstream origin "${{ github.repository }}-$GITHUB_RUN_ID"

  - name: Create pull request against target branch
    uses: actions/github-script@v7
    with:
      github-token: ${{ inputs.github_token }}
      script: |
        await github.rest.pulls.create({
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
          head: '${{ github.repository }}-${{ github.run_id }}',
          base: '${{ inputs.pr_against_branch }}',
          title: '${{ inputs.pr_title }}',
          body: '${{ inputs.pr_description }}',
        });
  - name: get PR data
    uses: actions/github-script@v7
    id: get_pr_data
    with:
      script: |
        return (
          await github.rest.repos.listPullRequestsAssociatedWithCommit({
            commit_sha: context.sha,
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
        ).data[0];
  - name: Add labels
    uses: actions/github-script@v7
    with:
      github-token: ${{ inputs.github_token }}
      script: |
        const res = await github.rest.issues.listForRepo({
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
        });
        const prNumber = ${{ fromJson(steps.get_pr_data.outputs.result).number }};  
        await github.rest.issues.addLabels({
          issue_number: prNumber,
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
          labels: ['${{ inputs.label }}']
        });
